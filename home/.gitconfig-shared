[alias]
  # Misc
  changeset = !git add .changeset && git commit -m 'Add changeset'
  cl = clone
  default = !basename $(git symbolic-ref --short refs/remotes/origin/HEAD)
  diffd = !git diff $(git default)..HEAD
  fix-ref = symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main
  trash = !git reset --hard && git clean -fd
  undo = reset --soft HEAD~
  unstash = stash pop
  # Branch
  br = branch
  clean-releases = !git branch --list 'release/*' | xargs -r git branch -D
  del = branch -D
  dump = "!f() { current=$(git branch --show-current) && git checkout $(git default) && git branch -D $current; }; f"
  name = branch -m
  # Commit
  amend = commit --amend --no-edit
  append = !git add -A && git commit --amend --no-edit
  c = commit -m
  ca = !git add -A && git commit -m
  cm = commit --edit
  edit = commit --amend
  msg = commit --amend -m
  sync = "!f() { git add -A && git commit -m \"${1-Sync}\" && git push; }; f"
  # Checkout
  co = checkout
  new = !git checkout $(git default) -b $2
  pd = !git checkout $(git default) && git pull && git fetch -p && git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D
  pp = !git pull && git push
  # Merge
  md = !git merge origin $(git default)
  ml = !git co - && git ml
  mc = merge --continue
  import = merge --no-commit --no-ff
  # Rebase
  rd = !git rebase $(git default)
  rl = !git co - && git rebase $(git default)
  rc = rebase --continue
  ri = !git rebase -i $(git default)
[core]
  autocrlf = input
  trustctime = false
  editor = nvim
  abbrev = 8
  pager = less -x2
[color]
  ui = true
[diff]
  colorMoved = default
[branch]
  autosetuprebase = always
[init]
  defaultBranch = main
[log]
  abbrevcommit = true
[pull]
  rebase = merges
[push]
  default = upstream
  autoSetupRemote = true

# vim:ft=gitconfig
