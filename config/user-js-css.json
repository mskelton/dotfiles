{
  "info": {
    "lastEmitterId": "3zefSZYfOK9XygNcVN-49",
    "updatedAt": 1743424209895,
    "version": 11
  },
  "libs": [],
  "r:8xgnXoFbYD6Cxig6WTI2s": {
    "css": "blockquote > p {\n  margin: 5px 0 !important;\n}\n\ntable {\n  margin-bottom: 16px;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "blockquote > p {\n  margin: 5px 0 !important;\n}\n\ntable {\n  margin-bottom: 16px;\n}\n",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:C0xcUYa49QdYCIPlqO9k1": {
    "css": "",
    "cssError": "",
    "js": "document.addEventListener('keydown', (event) => {\n\tif (event.metaKey && event.shiftKey && event.key === 'b') {\n\t\ttoggleFiles();\n\t}\n});\n\nfunction toggleFiles() {\n\tdocument\n\t\t.querySelectorAll(\n\t\t\t'.file-header:has(input[type=\"checkbox\"][name=\"viewed\"]:checked) button[aria-label=\"Toggle diff contents\"]'\n\t\t)\n\t\t.forEach((button) => button.click());\n}\n",
    "jsDraft": "",
    "scss": "",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:DInOFQgDgd9SC1NaQCwmV": {
    "css": "@media (prefers-color-scheme: dark) {\n  .notion-page-content [data-content-editable-leaf=true]:not(h1, h2, h3, h4, h5, h6) {\n    color: rgba(255, 255, 255, 0.65);\n  }\n  .notion-page-content :is(h1, h2, h3, h4, h5, h6) {\n    color: rgba(255, 255, 255, 0.81);\n  }\n  .notion-page-content [style*=\"font-weight:600\"] {\n    color: white;\n  }\n  .notion-page-content a {\n    color: #0072f5 !important;\n  }\n  .notion-page-content a > div > div {\n    background-image: none !important;\n  }\n  .notion-page-content a > span {\n    border: none !important;\n  }\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "@media (prefers-color-scheme: dark) {\n  .notion-page-content [data-content-editable-leaf=\"true\"]:not(h1, h2, h3, h4, h5, h6) {\n    color: rgba(255, 255, 255, 0.65);\n  }\n\n  .notion-page-content :is(h1, h2, h3, h4, h5, h6) {\n    color: rgba(255, 255, 255, 0.81);\n  }\n\n  .notion-page-content [style*=\"font-weight:600\"] {\n    color: white;\n  }\n\n  .notion-page-content a {\n    color: #0072f5 !important;\n  }\n\n  .notion-page-content a > div > div {\n    background-image: none !important;\n  }\n\n  .notion-page-content a > span {\n    border: none !important;\n  }\n}\n",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:DtjJt55kqkw3_isZqr80y": {
    "css": "footer {\n  display: none !important;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "footer {\n\tdisplay: none !important;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:EQ2SCArx4_M5yWTArOpGe": {
    "css": "button > [value=\"Take the Tour\"] {\n  display: none !important;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "button > [value=\"Take the Tour\"] {\n\tdisplay: none !important;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:Hl_xCMl1Wy6S4XIv_lApf": {
    "css": ".top-banner {\n  display: none;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": ".top-banner {\n  display: none;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:OEVcVBj-y7WVcfk9APagK": {
    "css": "",
    "cssError": "",
    "js": "document.addEventListener('keydown', (e) => {\n\t// Not while in inputs\n\tif (e.target.nodeName === 'INPUT' || e.target.nodeName === 'TEXTAREA') {\n\t\treturn;\n\t}\n\n\t// Only single keys (no modifiers)\n\tif (e.ctrlKey || e.altKey || e.shiftKey || e.metaKey) {\n\t\treturn;\n\t}\n\n\tswitch (e.key) {\n\t\tcase 'c':\n\t\t\treact('tada');\n\t\t\tbreak;\n\n\t\tcase 'e':\n\t\t\treact('eyes');\n\t\t\tbreak;\n\n\t\tcase 't':\n\t\t\treact('+1');\n\t\t\tbreak;\n\t\t\t\n\t\tcase 'd':\n\t\t\treact('-1');\n\t\t\tbreak;\n\t}\n});\n\nfunction react(emoji) {\n\tconst item = document.querySelector(\n\t\t`:is(.TimelineItem:hover .timeline-comment, .review-thread-component .timeline-comment-group:hover):not(.is-comment-editing) form.js-pick-reaction button[data-reaction-content=\"${emoji}\"]`\n\t);\n\n\titem?.click();\n}\n",
    "jsDraft": "",
    "scss": "",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:QdBNG4ZrGEq3qBtm6iV58": {
    "css": "",
    "cssError": "",
    "js": "document.addEventListener('keydown', (event) => {\n\tif (event.metaKey && event.shiftKey && event.key === 'h') {\n\t\ttoggleFiles();\n\t\tviewFiles();\n\t}\n});\n\nfunction toggleFiles() {\n\tconst checkbox = document\n\t\t.querySelector('file-filter input[type=\"checkbox\"][value=\".zip\"]')\n\t\t?.click();\n}\n\nconst paths = [\n\t'/_generated/',\n\t'tooling/codegen/openapi-auth.json',\n\t'tooling/codegen/openapi-fixtures.json',\n\t'tooling/codegen/openapi-public.json',\n\t'tooling/codegen/schema-commit.lock',\n\t'playwright/hars/',\n];\n\nfunction viewFiles() {\n\tconst selectors = paths.map((path) => `[title*=\"${path}\"]`).join(',');\n\tconst selector = `.file-header:has(:is(${selectors}))`;\n\tconst files = [...document.querySelectorAll(selector)];\n\n\tfiles\n\t\t.map((header) =>\n\t\t\theader.querySelector(\n\t\t\t\t'input[type=\"checkbox\"][name=\"viewed\"]:not(:checked)'\n\t\t\t)\n\t\t)\n\t\t.filter(Boolean)\n\t\t.forEach((checkbox) => checkbox.click());\n}\n",
    "jsDraft": "",
    "scss": "",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:Qgnvh0neQg4VIccumczpz": {
    "css": ".msgb,\n[role=contentinfo],\n[aria-label=Support],\n[src*=\"help_outline_white_24dp.png\"] {\n  display: none !important;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": ".msgb,\n[role='contentinfo'],\n[aria-label='Support'],\n[src*=\"help_outline_white_24dp.png\"] {\n\tdisplay: none !important;\n}\n",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:SDHGy_bujtnJGV5qBHyiw": {
    "css": "",
    "cssError": "",
    "js": "const queue = []\nconst transitionDuration = 300\n\nfunction createToastNode(toast) {\n  const node = document.createElement(\"div\")\n\n  node.classList.add(\"mds-notification\")\n  node.innerText = toast.text\n\n  Object.assign(node.style, {\n    alignItems: \"center\",\n    backgroundColor: \"#282e32\",\n    borderRadius: \"0.5rem\",\n    bottom: \"-2.5rem\",\n    boxShadow: \"0 0 0.5rem rgba(0 0, 0, 0.2)\",\n    boxSizing: \"border-box\",\n    color: \"#b6c2cf\",\n    display: \"flex\",\n    height: \"2.5rem\",\n    left: \"50%\",\n    margin: \"0 auto\",\n    padding: \"0.5rem 1.5rem\",\n    position: \"fixed\",\n    transform: \"translateX(-50%) scaleX(0)\",\n    transition: `all ${transitionDuration}ms ease-in-out`,\n    zIndex: 99999,\n  })\n\n  return node\n}\n\nlet drainId\nfunction showToast(toast) {\n  const node = createToastNode(toast)\n  document.body.appendChild(node)\n\n  // Wait for the next frame to animate in the notification\n  window.requestAnimationFrame(() => {\n    node.style.bottom = \"1rem\"\n    node.style.transform = \"translateX(-50%) scaleX(1)\"\n  })\n\n  // Wait 3 seconds before animating out the notification\n  clearTimeout(drainId)\n  drainId = window.setTimeout(drainQueue, toast.duration)\n}\n\nfunction runAfter(ms, callback) {\n  if (ms) window.setTimeout(callback, ms)\n  else callback()\n}\n\nfunction drainQueue() {\n  const notifications = document.querySelectorAll(\".mds-notification\")\n\n  // Animate out all notifications\n  notifications.forEach((node) => {\n    node.style.opacity = 0\n  })\n\n  // Wait for the animation to finish before removing the notification\n  runAfter(notifications.length ? transitionDuration : 0, () => {\n    notifications.forEach((node) => {\n      document.body.removeChild(node)\n    })\n\n    // Show the next notification in the queue if there is one\n    if (queue.length) {\n      showToast(queue.shift())\n    }\n  })\n}\n\n/**\n * Notify the user of an action.\n * @param {string} text - The text to display in the notification.\n * @param {number} duration - The duration of the notification in milliseconds.\n */\nfunction notify(text, duration = 3000) {\n  queue.push({ text, duration })\n  drainQueue()\n}\n\n/**\n * Convert a string to a slug.\n * @param {string} str - The string to convert.\n */\nfunction slugify(str) {\n  return str\n    .toLowerCase()\n    .replace(/['\"]/g, \"\")\n    .replace(/[^a-z0-9]+/g, \"-\")\n    .replace(/-{2,}/g, \"-\")\n    .trim()\n}\n\n/**\n * Get a selector for a test ID.\n * @param {string} id - The test ID to select.\n */\nconst testId = (id) => `[data-testid=\"${id}\"]`\n\nconst selectors = {\n  assignee: testId(\"issue.views.field.user.assignee\"),\n  issueNum: testId(\n    \"issue.views.issue-base.foundation.breadcrumbs.current-issue.item\",\n  ),\n  issueTitle: testId(\"issue.views.issue-base.foundation.summary.heading\"),\n  toolbar: testId(\"ak-editor-main-toolbar\"),\n}\n\nwindow.addEventListener(\"load\", () => {\n  function getIssueNumber() {\n    return document.querySelector(selectors.issueNum)?.textContent\n  }\n\n  function getBranchName() {\n    const num = getIssueNumber()\n    const title = document\n      .querySelector(selectors.issueTitle)\n      ?.textContent.replace(/^(fe|frontend|front end|front-end)/i, \"\")\n\n    const slug = slugify(title)\n      .split(\"-\")\n      .slice(0, 7) // Limit to the first 7 words\n      .join(\"-\")\n\n    return `${num.toLowerCase()}-${slug}`\n  }\n\n  // Quickly copy command to create a new branch when pressing cmd+shift+g\n  document.body.addEventListener(\"keydown\", async (e) => {\n    if (!(e.metaKey && e.shiftKey)) return\n\n    switch (e.key) {\n      // Copy new branch command\n      case \"g\":\n        e.preventDefault()\n        await navigator.clipboard.writeText(`git new ${getBranchName()}`)\n        notify(\"Copied new branch command\")\n        break\n\n      // Copy rename branch command\n      case \"e\":\n        e.preventDefault()\n        await navigator.clipboard.writeText(`git name ${getBranchName()}`)\n        notify(\"Copied rename branch command\")\n        break\n\n      // Copy worktree link\n      case \"p\":\n        e.preventDefault()\n        await navigator.clipboard.writeText(\n          `git worktree add ../${getBranchName()}`,\n        )\n        notify(\"Copied add worktree command\")\n        break\n\n      // Assign to me\n      case \"d\": {\n        e.preventDefault()\n        const field = document.querySelector(selectors.assignee)\n        const button = field?.querySelector('[role=\"button\"]')\n\n        if (button?.innerText === \"Assign to me\") {\n          button.click()\n          notify(\"Issue assigned to you\")\n        }\n      }\n    }\n  })\n\n  function focusElement(nodes, getNextIdx) {\n    if (!document.activeElement) return\n\n    const index = nodes.indexOf(document.activeElement)\n    const next = nodes[getNextIdx(index)]\n\n    next.tabIndex = 0\n    next.focus()\n    nodes[index].tabIndex = -1\n  }\n\n  // Fix keyboard navigation for the RTE toolbar\n  document.body.addEventListener(\"keyup\", (e) => {\n    const toolbar = document.activeElement?.closest(selectors.toolbar)\n    const actions = [...(toolbar?.querySelectorAll(\"button\").values() ?? [])]\n\n    switch (e.key) {\n      case \"Tab\":\n        actions\n          .filter((node) => node !== document.activeElement)\n          .forEach((node) => node.setAttribute(\"tabindex\", -1))\n        break\n\n      case \"ArrowLeft\":\n        focusElement(actions, (i) => Math.max(i - 1, 0))\n        break\n\n      case \"ArrowRight\":\n        focusElement(actions, (i) => Math.min(i + 1, actions.length - 1))\n        break\n    }\n  })\n})\n",
    "jsDraft": "",
    "scss": "",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:U8038-DSDNI2m4mRVEvk9": {
    "css": "header > .color-border-muted.lh-condensed.color-fg-muted {\n  display: none !important;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "header > .color-border-muted.lh-condensed.color-fg-muted {\n\tdisplay: none !important;\t\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:WI8sZG10Olz5xvgtu3wy7": {
    "css": "body {\n  overflow: scroll;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "body {\n\toverflow: scroll;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:YeVeTKSQMFk847msIMUN4": {
    "css": "@font-face {\n  font-family: termicons;\n  src: local(\"termicons\");\n  unicode-range: U+D000-D200;\n}\n.blob-code-inner,\n.blob-num,\n.highlight pre {\n  font-family: termicons, \"JetBrains Mono\" !important;\n}\n\n.pl-c {\n  font-style: italic;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "@font-face {\n  font-family: termicons;\n  src: local(\"termicons\");\n  unicode-range: U+D000-D200;\n}\n\n.blob-code-inner,\n.blob-num,\n.highlight pre {\n  font-family: termicons, \"JetBrains Mono\" !important;\n}\n\n.pl-c {\n  font-style: italic;\n}\n",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:_AiJmBGFjoXH72RRyJ6YD": {
    "css": "div[aria-label=Trending] {\n  display: none;\n}\n\nnav[aria-label=Footer],\ndiv[data-testid=GrokDrawer],\nbutton[aria-label=\"Grok actions\"] {\n  display: none;\n}\n\nnav[aria-label=Primary] a[aria-label=Grok],\nnav[aria-label=Primary] a[aria-label=Premium],\nnav[aria-label=Primary] a[aria-label=\"Verified Orgs\"] {\n  display: none;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "div[aria-label=\"Trending\"] {\n\tdisplay: none;\n}\n\nnav[aria-label=\"Footer\"],\ndiv[data-testid=\"GrokDrawer\"],\nbutton[aria-label=\"Grok actions\"] {\n\tdisplay: none;\n}\n\nnav[aria-label=\"Primary\"] {\n\ta[aria-label=\"Grok\"],\n\ta[aria-label=\"Premium\"],\n\ta[aria-label=\"Verified Orgs\"] {\n\t\tdisplay: none;\n\t}\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:bKkj6ulPQDPPVTP-iq5Uf": {
    "css": ".AppHeader .AppHeader-button--hasIndicator::before {\n  display: none !important;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": ".AppHeader .AppHeader-button--hasIndicator::before {\n\tdisplay: none !important;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:phGjQVcKf5SbQroe9eTpN": {
    "css": "ytd-rich-section-renderer:has([href^=\"/shorts/\"]) {\n  display: none;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "ytd-rich-section-renderer:has([href^=\"/shorts/\"]) {\n\tdisplay: none;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:rvkJurZBY11UNW-FtzgZc": {
    "css": "[id^=id-ad-] {\n  display: none;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "[id^=\"id-ad-\"] {\n  display: none;\n}\n",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:wGm_y68EGU2WdNKdxLMJ6": {
    "css": "#docs-feature-level-banner {\n  display: none;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "#docs-feature-level-banner {\n\tdisplay: none;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "r:x2w5Vuw3P7vsD9-UqciHS": {
    "css": "div[class^=info_]:has(a[href=\"https://v3.yarnpkg.com/\"]) {\n  display: none;\n}",
    "cssError": "",
    "js": "",
    "jsDraft": "",
    "scss": "div[class^='info_']:has(a[href=\"https://v3.yarnpkg.com/\"]) {\n\tdisplay: none;\n}",
    "scssDraft": "",
    "styleImportant": false
  },
  "rules": [
    {
      "created": 1726170442659,
      "flags": [],
      "id": "r:YeVeTKSQMFk847msIMUN4",
      "libs": [],
      "name": "GitHub - Code Font",
      "updated": 1726175328634,
      "urls": "https://github.com/*"
    },
    {
      "created": 1726170537733,
      "flags": [],
      "id": "r:DInOFQgDgd9SC1NaQCwmV",
      "libs": [],
      "name": "Notion - Text Readability",
      "updated": 1733332733609,
      "urls": "https://www.notion.so/*"
    },
    {
      "created": 1726175005420,
      "flags": [],
      "id": "r:phGjQVcKf5SbQroe9eTpN",
      "libs": [],
      "name": "YouTube - Hide Shorts",
      "updated": 1726175323500,
      "urls": "https://www.youtube.com/*"
    },
    {
      "created": 1726175304063,
      "flags": [],
      "id": "r:rvkJurZBY11UNW-FtzgZc",
      "libs": [],
      "name": "Samsung Food - Hide Ads",
      "updated": 1726175317009,
      "urls": "https://app.samsungfood.com/*"
    },
    {
      "created": 1726175404504,
      "flags": [],
      "id": "r:8xgnXoFbYD6Cxig6WTI2s",
      "libs": [],
      "name": "npm - Improved Markdown",
      "updated": 1726175515490,
      "urls": "https://www.npmjs.com/*"
    },
    {
      "created": 1726175546385,
      "flags": [],
      "id": "r:SDHGy_bujtnJGV5qBHyiw",
      "libs": [],
      "name": "Jira - Copy Shortcuts",
      "updated": 1726175574052,
      "urls": "https://*.atlassian.net/*"
    },
    {
      "created": 1726175801212,
      "flags": [],
      "id": "r:Hl_xCMl1Wy6S4XIv_lApf",
      "libs": [],
      "name": "MDN - Hide Ads",
      "updated": 1726175809129,
      "urls": "https://developer.mozilla.org/*"
    },
    {
      "created": 1726234201616,
      "flags": [],
      "id": "r:EQ2SCArx4_M5yWTArOpGe",
      "libs": [],
      "name": "Paylocity - Hide Tour Button",
      "updated": 1726234225110,
      "urls": "https://login.paylocity.com/*"
    },
    {
      "created": 1726234286836,
      "flags": [],
      "id": "r:QdBNG4ZrGEq3qBtm6iV58",
      "libs": [],
      "name": "GitHub - HAR Toggle",
      "updated": 1731594170807,
      "urls": "https://github.com/*"
    },
    {
      "created": 1726234341722,
      "flags": [],
      "id": "r:U8038-DSDNI2m4mRVEvk9",
      "libs": [],
      "name": "GitHub - Hide Enterprise Banner",
      "updated": 1726234459623,
      "urls": "https://github.com/*"
    },
    {
      "created": 1726582852618,
      "flags": [],
      "id": "r:Qgnvh0neQg4VIccumczpz",
      "libs": [],
      "name": "Gmail - Clean",
      "updated": 1726583146859,
      "urls": "https://mail.google.com/*"
    },
    {
      "created": 1728572825429,
      "flags": [],
      "id": "r:x2w5Vuw3P7vsD9-UqciHS",
      "libs": [],
      "name": "Yarn - Hide Docs Notice",
      "updated": 1728572975657,
      "urls": "https://yarnpkg.com/*"
    },
    {
      "created": 1728922460442,
      "flags": [],
      "id": "r:DtjJt55kqkw3_isZqr80y",
      "libs": [],
      "name": "Graphite - Hide Footer",
      "updated": 1728922476153,
      "urls": "https://app.graphite.dev/github/pr/*"
    },
    {
      "created": 1729254961799,
      "flags": [],
      "id": "r:wGm_y68EGU2WdNKdxLMJ6",
      "libs": [],
      "name": "Docs - Hide banner",
      "updated": 1729254986389,
      "urls": "https://docs.google.com/*"
    },
    {
      "created": 1733332714432,
      "flags": [],
      "id": "r:OEVcVBj-y7WVcfk9APagK",
      "libs": [],
      "name": "GitHub - Quick Reactions",
      "updated": 1739373284086,
      "urls": "https://github.com/*"
    },
    {
      "created": 1734715912889,
      "flags": [],
      "id": "r:C0xcUYa49QdYCIPlqO9k1",
      "libs": [],
      "name": "GitHub - Toggle Viewed Files",
      "updated": 1736537590402,
      "urls": "https://github.com/*"
    },
    {
      "created": 1742317402703,
      "flags": [],
      "id": "r:_AiJmBGFjoXH72RRyJ6YD",
      "libs": [],
      "name": "X - Clean",
      "updated": 1742318308405,
      "urls": "https://x.com/*"
    },
    {
      "created": 1742830862329,
      "flags": [],
      "id": "r:bKkj6ulPQDPPVTP-iq5Uf",
      "libs": [],
      "name": "GitHub - Hide notification dot",
      "updated": 1742830862477,
      "urls": "https://github.com/*"
    },
    {
      "created": 1743424192027,
      "flags": [],
      "id": "r:WI8sZG10Olz5xvgtu3wy7",
      "libs": [],
      "name": "Lingvano - Scroll Fix",
      "updated": 1743424209792,
      "urls": "https://app.lingvano.com/*"
    }
  ],
  "settings": {
    "badgeCounter": false,
    "editor": {
      "fontSize": 15,
      "keyboardHandler": "ace/keyboard/vscode",
      "showInvisibles": false,
      "tabSize": 2,
      "theme": "ace/theme/dracula",
      "useSoftTabs": false,
      "useWorker": true,
      "wrap": "free"
    },
    "editorFontFamily": "",
    "editorLigatures": true,
    "removeDevModeNotify": false,
    "rulesSortBy": "name",
    "rulesSortDesc": true,
    "strictUrl": false,
    "themeBg": "231.42deg 14.89% 18.43%",
    "themeDark": true,
    "themeText": "60deg 29.99% 96.07%"
  }
}
