#!/usr/bin/env bash
# Pull default branch for the repo/worktree and clean up deleted branches
set -euo pipefail

default_branch=$(git default)

if [ "$(git branch --show-current)" != "$default_branch" ]; then
	git checkout "$default_branch" >/dev/null
fi

echo "○ Pulling latest changes"
git pull origin "$default_branch" >/dev/null 2>&1
git fetch -p >/dev/null 2>&1

# Delete local branches that have been deleted on remote
deleted_branches=$(git branch -vv | grep 'origin/.*: gone]')
branches=$(echo "$deleted_branches" | grep -v '^+' | awk '{print $1}' || true)

if [ -n "$branches" ]; then
	for branch in $branches; do
		git branch -D "$branch" >/dev/null 2>&1
		echo "✔︎ Deleted branch: $branch"
	done
fi

# Delete worktrees that have been deleted on remote
worktree_branches=$(echo "$deleted_branches" | grep '^+' | awk '{print $2}' || true)

if [ -n "$worktree_branches" ]; then
	for branch in $worktree_branches; do
		# Lookup worktree path by branch name
		worktree_path=$(git worktree list --porcelain | grep -B2 "^branch refs/heads/$branch$" | grep '^worktree' | sed 's/worktree //' | head -1 || true)

		if [ -n "$worktree_path" ]; then
			git worktree remove "$worktree_path" >/dev/null
			echo "✔︎ Deleted worktree: ${worktree_path/$HOME\//\~/}"

			git branch -D "$branch" >/dev/null
			echo "✔︎ Deleted branch: $branch"
		else
			echo "✖︎︎ Could not find worktree path for branch $branch"
		fi
	done
fi
