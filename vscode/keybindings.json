[
  // Use cmd+n to create new files in the explorer
  {
    "command": "explorer.newFile",
    "key": "cmd+n",
    "when": "explorerViewletFocus && explorerViewletVisible"
  },
  // use cmd+shift+g to open the Git panel
  {
    "command": "workbench.view.scm",
    "key": "shift+cmd+g"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g"
  },
  // Use cmd+shift+a to focus the current file in the explorer
  {
    "command": "workbench.files.action.showActiveFileInExplorer",
    "key": "cmd+shift+a"
  },
  // Use cmd+shift+d to toggle the terminal
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "cmd+shift+d",
    "when": "terminal.active"
  },
  {
    "command": "-workbench.action.terminal.toggleTerminal",
    "key": "ctrl+`",
    "when": "terminal.active"
  },
  // Use cmd+shift+r to open the workspace find replace in the sidebar.
  {
    "command": "workbench.action.replaceInFiles",
    "key": "shift+cmd+r"
  },
  {
    "command": "-workbench.action.replaceInFiles",
    "key": "shift+cmd+h"
  },
  // Use cmd+n to create a new terminal when the terminal is focused.
  {
    "command": "workbench.action.terminal.new",
    "key": "cmd+n",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.new",
    "key": "ctrl+shift+`",
    "when": "terminalProcessSupported"
  },
  // Use cmd+w to close a terminal when the terminal is focused.
  {
    "command": "workbench.action.terminal.kill",
    "key": "cmd+w",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // Open JSON settings with the same type of chord as keyboard shortcuts
  {
    "command": "workbench.action.openSettingsJson",
    "key": "cmd+k cmd+,"
  },
  // Don't close the workspace using cmd+w. It's annoying.
  {
    "command": "-workbench.action.closeWindow",
    "key": "cmd+w",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  // Insert console.log snippet when pressing cmd+option+l
  {
    "args": { "snippet": "console.log($0)" },
    "command": "editor.action.insertSnippet",
    "key": "cmd+alt+shift+ctrl+l"
  },
  // Use meh+b for running the build task
  {
    "command": "workbench.action.tasks.build",
    "key": "ctrl+shift+alt+b"
  },
  {
    "command": "-workbench.action.tasks.build",
    "key": "shift+cmd+b"
  },
  // Use hyper+. for inserting an arrow function
  {
    "args": { "snippet": "() => ${1:{ $0 \\}}" },
    "command": "editor.action.insertSnippet",
    "key": "cmd+ctrl+shift+alt+="
  },
  // Use meh+t for inserting a translation interpolation
  {
    "args": { "snippet": "{t('$0')}" },
    "command": "editor.action.insertSnippet",
    "key": "alt+ctrl+shift+t"
  },
  // Use cmd+o to jump to symbols in the current file
  {
    "command": "workbench.action.gotoSymbol",
    "key": "cmd+o"
  },
  {
    "command": "-workbench.action.gotoSymbol",
    "key": "shift+cmd+o"
  },
  {
    "command": "-workbench.action.files.openFile",
    "key": "cmd+o",
    "when": "false"
  },
  {
    "command": "extension.cssrem.rem-switch-px",
    "key": "ctrl+shift+alt+x"
  },
  {
    "command": "-extension.cssrem.rem-switch-px",
    "key": "alt+z"
  },
  {
    "command": "git.openChange",
    "key": "cmd+k cmd+f"
  },
  // Open
  {
    "command": "-workbench.action.openRecent",
    "key": "ctrl+r"
  },
  {
    "command": "workbench.action.openRecent",
    "key": "shift+cmd+o"
  },
  {
    "command": "-editor.action.deleteLines",
    "key": "shift+cmd+k",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "aipopup.action.modal.generate",
    "key": "shift+cmd+k",
    "when": "editorFocus && !composerBarIsVisible"
  },
  // Use ctrl+j and ctrl+k to navigate lists
  {
    "command": "-editor.action.joinLines",
    "key": "ctrl+j"
  },
  {
    "command": "-extension.vim_ctrl+j",
    "key": "ctrl+j"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+j",
    "when": "inQuickOpen"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+j",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-deleteAllRight",
    "key": "ctrl+k"
  },
  {
    "command": "-extension.vim_ctrl+k",
    "key": "ctrl+k"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+k",
    "when": "inQuickOpen"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+k",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // Use ctrl+l to trigger suggestions
  {
    "command": "editor.action.triggerSuggest",
    "key": "ctrl+l",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "ctrl+space",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  // Open keybindings with cmd+shift+, similar to opening settings
  {
    "command": "workbench.action.openGlobalKeybindings",
    "key": "shift+cmd+,"
  },
  {
    "command": "-workbench.action.openGlobalKeybindings",
    "key": "cmd+r cmd+s"
  }
]
