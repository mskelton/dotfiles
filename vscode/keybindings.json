[
  // Use cmd+n to create new files in the explorer
  {
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus && explorerViewletVisible"
  },
  // use cmd+shift+g to open the Git panel
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  // Use cmd+shift+a to focus the current file in the explorer
  {
    "key": "cmd+shift+a",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  // Use cmd+shift+d to toggle the terminal
  {
    "key": "cmd+shift+d",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  // Use cmd+shift+r to open the workspace find replace in the sidebar.
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  // Use cmd+n to create a new terminal when the terminal is focused.
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported"
  },
  // Use cmd+w to close a terminal when the terminal is focused.
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // Open JSON settings with the same type of chord as keyboard shortcuts
  {
    "key": "cmd+k cmd+,",
    "command": "workbench.action.openSettingsJson"
  },
  // Don't close the workspace using cmd+w. It's annoying.
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  // Insert console.log snippet when pressing cmd+option+l
  {
    "key": "cmd+alt+shift+ctrl+l",
    "command": "editor.action.insertSnippet",
    "args": { "snippet": "console.log($0)" }
  },
  // Use meh+b for running the build task
  {
    "key": "ctrl+shift+alt+b",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build"
  },
  // Use hyper+. for inserting an arrow function
  {
    "key": "cmd+ctrl+shift+alt+=",
    "command": "editor.action.insertSnippet",
    "args": { "snippet": "() => ${1:{ $0 \\}}" }
  },
  // Use meh+t for inserting a translation interpolation
  {
    "key": "alt+ctrl+shift+t",
    "command": "editor.action.insertSnippet",
    "args": { "snippet": "{t('$0')}" }
  },
  // Use cmd+o to jump to symbols in the current file
  {
    "key": "cmd+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFile",
    "when": "false"
  },
  {
    "key": "ctrl+shift+alt+x",
    "command": "extension.cssrem.rem-switch-px"
  },
  {
    "key": "alt+z",
    "command": "-extension.cssrem.rem-switch-px"
  },
  {
    "key": "cmd+k cmd+f",
    "command": "git.openChange"
  },
  // ctrl+k and ctrl+j to navigate up/down in lists
  // {
  //   "key": "ctrl+j",
  //   "command": "workbench.action.quickOpenSelectNext",
  //   "when": "inQuickOpen"
  // },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines"
  },
  {
    "key": "ctrl+j",
    "command": "-extension.vim_ctrl+j"
  },
  // {
  //   "key": "ctrl+k",
  //   "command": "workbench.action.quickOpenSelectPrevious",
  //   "when": "inQuickOpen"
  // },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k"
  },
  // Open
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "shift+cmd+o",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "aipopup.action.modal.generate",
    "when": "editorFocus && !composerBarIsVisible"
  },
  // Use ctrl+j and ctrl+k to navigate the suggestion list
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // Use ctrl+l to trigger suggestions
  {
    "key": "ctrl+l",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  }
]
