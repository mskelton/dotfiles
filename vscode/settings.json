{
  "editor.colorDecorators": false,
  "[go]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.organizeImports": "explicit",
    },
  },
  "[go][go.mod][go.sum]": {
    "editor.defaultFormatter": "golang.go",
  },
  "[html]": {
    "editor.tabSize": 4,
  },
  "[javascript][javascriptreact][typescript][typescriptreact]": {
    "editor.autoClosingBrackets": "languageDefined",
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
  },
  "[markdown]": {
    "editor.tabSize": 3,
    "editor.wordWrap": "on",
  },
  "[python]": {
    "editor.tabSize": 4,
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.tabSize": 4,
  },
  "auto-correct.dictionary": [
    {
      "languages": ["*"],
      "useLargeList": false,
      "words": {
        "MS": "Mark Skelton",
        "accomodate": "accommodate",
        "accross": "across",
        "appologize": "apologize",
        "calender": "calendar",
        "committment": "commitment",
        "concious": "conscious",
        "deductable": "deductible",
        "definately": "definitely",
        "embarass{,ment}": "embarrass{,ment}",
        "enviroment": "environment",
        "existance": "existence",
        "grammer": "grammar",
        "independant": "independent",
        "neccessary": "necessary",
        "occassion": "occasion",
        "occured": "occurred",
        "occurence": "occurrence",
        "posession": "possession",
        "priviledge": "privilege",
        "reciept": "receipt",
        "recieve": "receive",
        "relevent": "relevant",
        "seperate": "separate",
        "teh": "the",
        "ture": "true",
        "wierd": "weird",
      },
    },
    {
      "languages": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
      ],
      "words": {
        "Null": "null",
        "RN": "ReactNode",
        "cosnt": "const",
        "functoin": "function",
        "und": "undefined",
      },
    },
    {
      "languages": ["typescript", "typescriptreact"],
      "words": {
        "kn": "unknown",
      },
    },
  ],
  "cSpell.diagnosticLevel": "Hint",
  "cSpell.userWords": ["Akuma", "codeowners"],
  "chat.editor.fontSize": 15,
  "cursor.chat.terminalShowHoverHint": false,
  "cursor.cpp.disabledLanguages": ["plaintext", "markdown"],
  "debug.console.fontSize": 15,
  "debug.openDebug": "openOnDebugBreak",
  "debug.toolBarLocation": "docked",
  "diffEditor.hideUnchangedRegions.enabled": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.renderSideBySide": true,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.accessibilitySupport": "off",
  "editor.autoClosingDelete": "always",
  "editor.autoClosingOvertype": "always",
  "editor.bracketPairColorization.enabled": false,
  "editor.codeActionsOnSave": ["source.fixAll"],
  "editor.comments.ignoreEmptyLines": false,
  "editor.cursorBlinking": "phase",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.dragAndDrop": false,
  "editor.fontFamily": "JetBrains Mono, Symbols Nerd Font, codicon, termicons, Monaco, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 15,
  "editor.formatOnSave": true,
  "editor.gotoLocation.multipleDeclarations": "gotoAndPeek",
  "editor.gotoLocation.multipleDefinitions": "gotoAndPeek",
  "editor.gotoLocation.multipleImplementations": "gotoAndPeek",
  "editor.gotoLocation.multipleReferences": "gotoAndPeek",
  "editor.gotoLocation.multipleTypeDefinitions": "gotoAndPeek",
  "editor.guides.bracketPairsHorizontal": false,
  "editor.guides.highlightActiveBracketPair": false,
  "editor.guides.highlightActiveIndentation": false,
  "editor.guides.indentation": false,
  "editor.inlayHints.enabled": "off",
  "editor.inlineSuggest.enabled": true,
  "editor.lineNumbers": "relative",
  "editor.linkedEditing": true,
  "editor.matchBrackets": "never",
  "editor.occurrencesHighlight": "off",
  "editor.rename.enablePreview": false,
  "editor.renderControlCharacters": true,
  "editor.renderWhitespace": "trailing",
  "editor.rulers": [80],
  "editor.selectionHighlight": false,
  "editor.stickyScroll.enabled": false,
  "editor.suggest.preview": true,
  "editor.suggest.showWords": false,
  "editor.suggestSelection": "first",
  "editor.tabCompletion": "onlySnippets",
  "editor.tabSize": 2,
  "editor.unicodeHighlight.allowedCharacters": {
    "–": true,
    "’": true,
    "“": true,
    "”": true,
  },
  "editor.wrappingIndent": "indent",
  "emmet.showExpandedAbbreviation": "inMarkupAndStylesheetFilesOnly",
  "emmet.triggerExpansionOnTab": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
  ],
  "explorer.autoReveal": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "extensions.ignoreRecommendations": true,
  "files.associations": {
    "*.ftl": "html",
    "*.mq5": "cpp",
    "*.mqh": "cpp",
    "*.pro": "prolog",
    ".releaserc": "json",
    ".stylelintrc": "json",
  },
  "files.exclude": {
    "**/*.iml": true,
    "**/.classpath": true,
    "**/.factorypath": true,
    "**/.git": true,
    "**/.gradle": true,
    "**/.idea": true,
    "**/.project": true,
    "**/.settings": true,
    "**/node_modules": true,
    "**/out": true,
  },
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "git.blame.statusBarItem.enabled": true,
  "git.branchProtection": ["main", "master"],
  "git.checkoutType": ["local"],
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.openRepositoryInParentFolders": "never",
  "github.copilot.enable": {
    "*": true,
    "markdown": false,
    "plaintext": false,
    "yaml": true,
  },
  "githubPullRequests.pullBranch": "never",
  "html.format.wrapLineLength": 80,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "literals",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "markdown.preview.fontSize": 15,
  "material-icon-theme.activeIconPack": "react",
  "notebook.markup.fontSize": 15,
  "playwright.reuseBrowser": true,
  "prettier.requireConfig": true,
  "scm.diffDecorationsGutterPattern": {
    "modified": false,
  },
  "search.exclude": {
    "**/.yarn": true,
    "**/tsconfig.tsbuildinfo": true,
  },
  "search.quickOpen.history.filterSortOrder": "recency",
  "security.promptForLocalFileProtocolHandling": false,
  "security.workspace.trust.startupPrompt": "never",
  "terminal.external.osxExec": "Iterm.app",
  "terminal.integrated.commandsToSkipShell": ["workbench.action.openRecent"],
  "terminal.integrated.defaultProfile.osx": "fish",
  "terminal.integrated.env.osx": {
    "NODE_ENV": null,
  },
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.showExitAlert": false,
  "terminal.integrated.tabs.location": "left",
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "vim.foldfix": true,
  "vim.handleKeys": {
    "<C-r>": true,
    "<C-v>": true,
  },
  "vim.leader": "<space>",
  "vim.normalModeKeyBindings": [
    // Find
    {
      "before": ["<leader>", "f", "p"],
      "commands": ["workbench.action.quickOpen"],
      "silent": true,
    },
    {
      "before": ["<leader>", "f", "d"],
      "commands": ["workbench.files.action.showActiveFileInExplorer"],
      "silent": true,
    },
    {
      "before": ["<leader>", "f", "s"],
      "commands": ["workbench.action.findInFiles"],
      "silent": true,
    },
    {
      "before": ["<leader>", "f", "o"],
      "commands": ["workbench.action.openRecent"],
      "silent": true,
    },
    {
      "before": ["<leader>", "f", "n"],
      "commands": ["git.checkout"],
      "silent": true,
    },
    {
      "before": ["<leader>", "f", "y"],
      "commands": ["workbench.action.gotoSymbol"],
      "silent": true,
    },
    // {
    //   "before": ["<leader>", "f", "a"],
    //   "commands": ["workbench.action.quickOpen"],
    //   "args": {
    //     "folder": "${fileDirname}",
    //   }
    // },
    // {
    //   "before": ["<leader>", "j", "r"],
    //   "commands": ["workbench.action.gotoSymbol"]
    // },
    // {
    //   "before": ["<leader>", "j", "c"],
    //   "commands": ["workbench.action.gotoSymbol"]
    // },
    // {
    //   "before": ["<leader>", "t", "s"],
    //   "commands": ["workbench.action.gotoSymbol"]
    // },
    // Git
    {
      "before": ["<leader>", "v", "s"],
      "commands": ["git.stageChange"],
      "silent": true,
    },
    {
      "before": ["<leader>", "v", "u"],
      "commands": ["git.revertChange"],
      "silent": true,
    },
    // {
    //   "before": ["<leader>", "v", "d"],
    //   "commands": ["compareSelected"],
    //   "silent": true,
    // },
    {
      "before": ["[", "v"],
      "commands": ["workbench.action.editor.previousChange"],
      "silent": true,
    },
    {
      "before": ["]", "v"],
      "commands": ["workbench.action.editor.nextChange"],
      "silent": true,
    },
    // LSP
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"],
      "silent": true,
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"],
      "silent": true,
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showDefinitionPreviewHover"],
      "silent": true,
    },
    // Undo/redo
    {
      "before": ["u"],
      "commands": ["undo"],
      "silent": true,
    },
    {
      "before": ["<C-r>"],
      "commands": ["redo"],
      "silent": true,
    },
    // Open command line in popup with `:` or `;`
    {
      "before": [":"],
      "commands": ["vim.showQuickpickCmdLine"],
      "silent": true,
    },
    {
      "before": [";"],
      "commands": ["vim.showQuickpickCmdLine"],
      "silent": true,
    },
    // Save file
    {
      "before": [",", "s"],
      "commands": ["workbench.action.files.save"],
      "silent": true,
    },
    // Close window
    {
      "before": [",", "w"],
      "commands": ["workbench.action.closeActiveEditor"],
      "silent": true,
    },
    // Navigate to next/previous editor
    {
      "before": ["[", "b"],
      "commands": ["workbench.action.previousEditor"],
      "silent": true,
    },
    {
      "before": ["]", "b"],
      "commands": ["workbench.action.nextEditor"],
      "silent": true,
    },
    // Close other editors (like Vim's :only)
    {
      "before": ["<leader>", "o", "n"],
      "commands": ["workbench.action.closeOtherEditors"],
      "silent": true,
    },
    // Rename symbol
    {
      "before": ["<leader>", "r", "n"],
      "commands": ["editor.action.rename"],
      "silent": true,
    },
    // Rename file
    {
      "before": ["<leader>", "r", "f"],
      "commands": ["fileutils.renameFile"],
      "silent": true,
    },
    // I frequently roll zv for visually selection which doesn't work great on my
    // keyboard since I use a multi-function key for z/ctrl. This mapping sets
    // zv to the same as C-v.
    {
      "before": ["z", "v"],
      "commands": ["extension.vim_ctrl+v"],
      "silent": true,
    },
    // Delete file
    {
      "before": ["<leader>", "o", "d", "f"],
      "commands": ["fileutils.removeFile"],
      "silent": true,
    },
    {
      "before": ["<leader>", "o", "f"],
      "commands": ["fileutils.removeFile"],
      "silent": true,
    },
  ],
  "vim.visualModeKeyBindings": [
    // Move lines up and down
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"],
      "silent": true,
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"],
      "silent": true,
    },
  ],
  "vim.useSystemClipboard": true,
  "window.dialogStyle": "custom",
  "window.newWindowDimensions": "maximized",
  "window.title": "${activeEditorMedium}${separator}${rootName}",
  "window.zoomPerWindow": false,
  "workbench.colorCustomizations": {
    "errorLens.errorBackground": "#0000",
    "errorLens.errorMessageBackground": "#e4545419",
    "errorLens.warningBackground": "#0000",
    "errorLens.warningMessageBackground": "#ff942f19",
    "editorSuggestWidget.selectedBackground": "#2f334d",
  },
  "workbench.colorTheme": "Tokyo Night Moon",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.decorations.badges": true,
  "workbench.editor.decorations.colors": false,
  "workbench.editor.dragToOpenWindow": false,
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "workbench.editor.navigationScope": "editorGroup",
  "workbench.editor.pinnedTabSizing": "shrink",
  "workbench.editor.tabActionCloseVisibility": false,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.tips.enabled": false,
  "workbench.tree.renderIndentGuides": "none",
  "githubPullRequests.notifications": "pullRequests",
  "githubIssues.issueCompletions.enabled": false,
  "githubIssues.userCompletions.enabled": false,
  "githubPullRequests.queries": [
    {
      "label": "Created By Me",
      "query": "repo:${owner}/${repository} is:open author:${user}",
    },
    {
      "label": "Assigned To Me",
      "query": "repo:${owner}/${repository} is:open assignee:${user}",
    },
  ],
  "githubPullRequests.pullRequestDescription": "none",
  "search.smartCase": true,
  "explorer.decorations.colors": false,
  "search.decorations.colors": false,
  "workbench.layoutControl.enabled": false,
  "breadcrumbs.enabled": false,
  "errorLens.statusBarIconsTargetProblems": "activeEditor",
  "errorLens.statusBarColorsEnabled": true,
  "errorLens.statusBarIconsEnabled": true,
  "errorLens.statusBarIconsUseBackground": false,
  "errorLens.statusBarIconsAtZero": "hide",
  "githubPullRequests.experimental.notificationsView": true,
  "githubPullRequests.commentExpandState": "collapseAll",
}
