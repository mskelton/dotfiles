#!/usr/bin/env bash
# Pull default branch for the repo/worktree and clean up deleted branches
set -euo pipefail

repo_path=$(git rev-parse --show-toplevel)
default_branch=$(git -C "$repo_path" default)

# Escape sequence to clear the line
clr="\033[2K"

if [ "$(git -C "$repo_path" branch --show-current)" != "$default_branch" ]; then
  git -C "$repo_path" checkout "$default_branch" >/dev/null 2>&1
fi

printf "○ Pulling latest changes"
git -C "$repo_path" pull origin "$default_branch" >/dev/null 2>&1
printf "$clr\r✔︎ Pulled latest changes\n"

printf "○ Pruning local branches"
git -C "$repo_path" fetch -p >/dev/null 2>&1
printf "$clr\r✔︎ Pruned local branches\n"

# Delete local branches that have been deleted on remote
deleted_branches=$(git -C "$repo_path" branch -vv | grep 'origin/.*: gone]' || true)
branches=$(echo "$deleted_branches" | grep -v '^+' | awk '{print $1}' || true)

if [ -n "$branches" ]; then
  for branch in $branches; do
    git -C "$repo_path" branch -D "$branch" >/dev/null 2>&1
    printf "✔︎ Deleted branch: $branch\n"
  done
fi

# Reset worktrees when their branches have been deleted
worktree_branches=$(echo "$deleted_branches" | grep '^+' | awk '{print $2}' || true)

if [ -n "$worktree_branches" ]; then
  for branch in $worktree_branches; do
    # Lookup worktree path by branch name
    worktree_path=$(
      git -C "$repo_path" worktree list --porcelain |
        grep -B2 "^branch refs/heads/$branch$" |
        grep '^worktree' |
        sed 's/worktree //' |
        head -1 || true
    )

    printf "○ Resetting worktree: ${worktree_path/$HOME\//\~/}"

    if [ -n "$worktree_path" ]; then
      worktree_branch=$(basename "$worktree_path" | sed 's/^web-//')
      git -C "$worktree_path" checkout -b "$worktree_branch" >/dev/null 2>&1
      git -C "$repo_path" branch -D "$branch" >/dev/null 2>&1

      printf "$clr\r✔︎ Reset worktree: ${worktree_path/$HOME\//\~/}\n"
      printf "✔︎ Deleted branch: $branch\n"
    else
      printf "$clr\r✖︎︎ Could not find worktree path for branch $branch\n"
    fi
  done
fi
