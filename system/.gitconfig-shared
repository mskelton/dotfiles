[alias]
  # Misc
  cl = clone
  default = !basename $(git symbolic-ref --short refs/remotes/origin/HEAD)
  diffd = !git diff $(git default)..HEAD
  fix-ref = symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main
  pf = push --force-with-lease
  trash = "!f() { if [ -n \"$(git status --porcelain)\" ]; then git add -A && git commit -qm 'trashing' && git reset -q --hard HEAD~1; else echo 'No changes to discard'; exit 1; fi; }; f"
  undo = reset --soft HEAD~
  unstash = stash pop
  # Branch
  br = branch
  del = branch -D
  dump = "!f() { current=$(git branch --show-current) && git checkout $(git default) && git branch -D $current; }; f"
  name = branch -m
  # Commit
  amend = commit --amend --no-edit
  append = !git add -A && git commit --amend --no-edit
  c = commit -m
  ca = !git add -A && git commit -m
  cm = commit --edit
  edit = commit --amend
  msg = commit --amend -m
  sync = "!f() { git add -A && git commit -m \"${1-Sync}\" && git push; }; f"
  # Checkout
  co = checkout
  m = !git checkout $(git default)
  new = !git checkout $(git default) -b $2
  pp = !git pull && git push
  # Merge
  md = !git fetch origin $(git default) && git merge origin $(git default) --no-edit
  ml = !git co - && git merge origin $(git default) --no-edit
  mc = "!f() { if [ -f .git/MERGE_HEAD ]; then git commit --no-edit; else echo 'fatal: There is no merge in progress (MERGE_HEAD missing).' >&2; exit 1; fi; }; f"
  import = merge --no-commit --no-ff
  # Rebase
  rd = !git fetch origin $(git default) && git rebase origin/$(git default)
  rl = !git co - && git rebase origin/$(git default)
  ri = !git rebase $(git default)
  rc = rebase --continue
  fix = !git add . && git rebase --continue
  # Work
  reset-hars = !git checkout $(git default) playwright/hars/
[branch]
  autosetuprebase = always
[commit]
  gpgsign = true
[core]
  abbrev = 8
  autocrlf = input
  editor = nvim
  pager = less -x2
  trustctime = false
[color]
  ui = true
[diff]
  colorMoved = default
  tool = kitty
  guitool = kitty.gui
[diff "lockb"]
  textconv = bun
  binary = true
[difftool]
  prompt = false
  trustExitCode = true
[difftool "kitty"]
  cmd = kitten diff $LOCAL $REMOTE
[difftool "kitty.gui"]
  cmd = kitten diff $LOCAL $REMOTE
[gpg]
	format = ssh
[init]
  defaultBranch = main
[log]
  abbrevcommit = true
[pull]
  rebase = merges
[push]
  default = upstream
  autoSetupRemote = true
[tag]
  gpgsign = true
[user]
	name = Mark Skelton
  email = mdskelton99@gmail.com

# vim:ft=gitconfig
